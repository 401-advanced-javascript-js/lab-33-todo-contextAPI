{"version":3,"sources":["components/context/todo-context.js","components/counter/counter.js","components/addItemForm/addItemForm.js","components/if/index.js","components/list/list.js","components/todo/todo.js","app.js","index.js"],"names":["ToDoContext","React","createContext","ContextProvider","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","item","text","target","value","complete","id","uuid","setState","addItem","e","preventDefault","reset","todoList","concat","toConsumableArray","state","updateItem","saveItem","toggleComplete","filter","i","updatedItem","map","editing","toggleEdit","react_default","a","createElement","Provider","children","Component","Counter","Fragment","context","length","contextType","AddItemForm","onSubmit","placeholder","onChange","render","condition","arguments","undefined","When","ToDoList","className","toString","key","onClick","defaultValue","__webpack_require__","then","t","bind","ToDo","counter_Counter","addItemForm_AddItemForm","list_ToDoList","App","todo_context_ContextProvider","todo","Main","app_App","rootElement","document","getElementById","ReactDOM","src_Main"],"mappings":"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","file":"static/js/main.55b6ec14.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport uuid from 'uuid/v4';\n\nexport const ToDoContext = React.createContext();\n\nexport default class ContextProvider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList: [],\n      item: {},\n      editing: false,\n      // -------------------------\n      handleInputChange: this.handleInputChange,\n      addItem: this.addItem,\n      updateItem: this.updateItem,\n      toggleComplete: this.toggleComplete,\n      saveItem: this.saveItem,\n      toggleEdit: this.toggleEdit,\n    };\n  }\n\n  handleInputChange = (event) => {\n    const item = {\n      text: event.target.value,\n      complete: !!event.target.complete,\n      id: event.target.id || uuid(),\n    };\n    this.setState({ item });\n  };\n\n  addItem = (e) => {\n    e.preventDefault();\n    e.target.reset();\n    this.setState({ todoList: [...this.state.todoList, this.state.item] });\n  };\n\n  updateItem = (e) => {\n    e.preventDefault();\n    this.saveItem(this.state.item);\n  };\n\n  toggleComplete = (id) => {\n    const item = this.state.todoList.filter(i => i.id === id)[0] || {};\n    if (item.id) {\n      item.complete = !item.complete;\n      this.saveItem(item);\n    }\n  };\n\n  saveItem = (updatedItem) => {\n    this.setState({\n      todoList: this.state.todoList.map(item => (item.id === updatedItem.id ? updatedItem : item)),\n      editing: false,\n    });\n  };\n\n  toggleEdit = (id) => {\n    const editing = this.state.editing === id ? false : id;\n    this.setState({ editing });\n  };\n\n  render() {\n    return <ToDoContext.Provider value={this.state}>{this.props.children}</ToDoContext.Provider>;\n  }\n}\n","import React from 'react';\n\nimport { ToDoContext } from '../context/todo-context';\n\nexport default class Counter extends React.Component {\n  static contextType = ToDoContext;\n\n  render() {\n    return (\n      <>\n        <h2>There are {this.context.todoList.length} items in the list</h2>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { ToDoContext } from '../context/todo-context';\n\nexport default class AddItemForm extends React.Component {\n  static contextType = ToDoContext;\n\n  render() {\n    return (\n      <>\n        <div>\n          <form onSubmit={this.context.addItem}>\n            <input placeholder=\"Add To Do List Item\" onChange={this.context.handleInputChange} />\n          </form>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nconst render = (condition = false, children = null) => {\n  return condition ? children : null;\n};\n\nexport const If = props => React.Children.map(props.children, (child) => {\n  return React.cloneElement(child, { condition: props.condition });\n});\n\nexport const Then = props => render(props.condition, props.children);\nexport const Else = props => render(!props.condition, props.children);\n\n/*\n<When condition={true}>\n  <h2>When Works</h2>\n</When>\n*/\nexport const When = props => render(props.condition, props.children);\n\n/*\n<Unless condition={administrator}>\n  Pay more $$ and we will make you an admin\n</Unless>\n*/\nexport const Unless = props => render(!props.condition, props.children);\n","import React from 'react';\nimport { When } from '../if';\nimport { ToDoContext } from '../context/todo-context';\n\nexport default class ToDoList extends React.Component {\n  static contextType = ToDoContext;\n\n  render() {\n    return (\n      <>\n        <div>\n          <ul>\n            {this.context.todoList\n              && this.context.todoList.map(item => (\n                <li className={`complete-${item.complete.toString()}`} key={item.id}>\n                  <span onClick={() => this.context.toggleComplete(item.id)}>{item.text}</span>\n                  <button onClick={() => this.context.toggleEdit(item.id)}>edit</button>\n                  <When condition={this.context.editing === item.id}>\n                    <form onSubmit={this.context.updateItem}>\n                      <input\n                        onChange={this.context.handleInputChange}\n                        id={item.id}\n                        complete={item.complete}\n                        defaultValue={item.text}\n                      />\n                    </form>\n                  </When>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nimport Counter from '../counter/counter';\nimport AddItemForm from '../addItemForm/addItemForm';\nimport ToDoList from '../list/list';\n\nimport { ToDoContext } from '../context/todo-context';\n\nimport('./todo.scss');\n\nclass ToDo extends React.Component {\n  static contextType = ToDoContext;\n\n  render() {\n    return (\n      <section className=\"todo\">\n        <Counter />\n        <AddItemForm />\n        <ToDoList />\n      </section>\n    );\n  }\n}\n\nexport default ToDo;\n","import React from 'react';\n\nimport ContextProvider from './components/context/todo-context';\nimport ToDo from './components/todo/todo';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <>\n        <ContextProvider>\n          <ToDo />\n        </ContextProvider>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}